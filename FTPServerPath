Approach to Building the Weather Dashboard
Component Breakdown:

CurrentWeather Component: This component fetches and displays the current weather data 
for a specified city, including temperature, weather conditions, and mood suggestions
 based on the current weather.


Forecast Component: It provides both hourly and daily forecasts for the specified city.


UserSpecific Component: This component offers customized information based on different
 user roles:


Event Planners: It displays upcoming events and provides weather alerts relevant to planning
 outdoor activities.


Farmers: It shows soil moisture levels and dynamically adjusts rainfall information based 
on current weather conditions.


Travelers: This section suggests travel routes based on the current weather conditions to 
ensure safe and informed travel plans.


API Integration:

I integrated the OpenWeatherMap API (https://api.openweathermap.org) to fetch real-time
 weather data. This involved using endpoints like /weather for current conditions and /
forecast for future projections.


Dynamic Content Handling:

Leveraging React’s useState and useEffect hooks, I managed state and triggered data
 fetching based on user input (city selection). I also incorporated conditional
 rendering to enhance user experience during data loading.


Conditional Rendering:

Using switch statements, I dynamically adjusted content based on weather conditions 
such as ‘Clear,’ ‘Clouds,’ ‘Rain,’ etc. This included setting mood suggestions, event 
recommendations, and travel advisories specific to each weather type.


User Interaction:

I facilitated user interaction by allowing them to input their desired location (inputCity). 
Upon submitting, the application fetched weather data for that location (handleSearch function), 
updating the dashboard accordingly.


Styling and User Interface:

I prioritized a clean and intuitive interface using CSS (App.css), ensuring readability
 and accessibility of weather information across different components (CurrentWeather,
 Forecast, UserSpecific).


